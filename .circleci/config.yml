# This file was generated by the excavator check 'excavator/manage-circleci' as specified in .circleci/template.sh.
# To request a modification to the general template, file an issue on Excavator.
# To manually manage the CircleCI configuration for this project, remove the .circleci/template.sh file.

version: 2.1

orbs:
  go: palantir/go@0.0.29
  godel: palantir/godel@0.0.29

homepath: &homepath
  homepath: /home/circleci

gopath: &gopath
  gopath: /home/circleci/go

working_directory: &working_directory
    working_directory: /home/circleci/go/src/github.com/palantir/log4j-sniffer

executors:
  circleci-go:
    docker:
      - image: cimg/go:1.16-browsers
    <<: *working_directory

all-tags-filter: &all-tags-filter
  filters:
    tags:
      only: /.*/

jobs:
  dist:
    executor: circleci-go
    steps:
      - checkout
      - run: version="$(./godelw project-version)" && for dist in linux-amd64 linux-arm64 darwin-amd64 darwin-arm64 windows-amd64; do mkdir -p ./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/$dist; done
      - run: version="$(./godelw project-version)" && GOFLAGS="-mod=vendor" CGO_ENABLED="1" GOOS=linux   GOARCH=amd64 go build -ldflags "-X github.com/palantir/log4j-sniffer/cmd.Version=$version" -o "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/linux-amd64/log4j-sniffer" .
      - run: version="$(./godelw project-version)" && GOFLAGS="-mod=vendor"                 GOOS=linux   GOARCH=arm64 go build -ldflags "-X github.com/palantir/log4j-sniffer/cmd.Version=$version" -o "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/linux-arm64/log4j-sniffer" .
      - run: version="$(./godelw project-version)" && GOFLAGS="-mod=vendor"                 GOOS=darwin  GOARCH=amd64 go build -ldflags "-X github.com/palantir/log4j-sniffer/cmd.Version=$version" -o "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/darwin-amd64/log4j-sniffer" .
      - run: version="$(./godelw project-version)" && GOFLAGS="-mod=vendor"                 GOOS=darwin  GOARCH=arm64 go build -ldflags "-X github.com/palantir/log4j-sniffer/cmd.Version=$version" -o "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/darwin-arm64/log4j-sniffer" .
      - run: version="$(./godelw project-version)" && GOFLAGS="-mod=vendor"                 GOOS=windows GOARCH=amd64 go build -ldflags "-X github.com/palantir/log4j-sniffer/cmd.Version=$version" -o "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/windows-amd64/log4j-sniffer.exe" .
      - run: version="$(./godelw project-version)" && for dist in linux-amd64 linux-arm64 darwin-amd64 darwin-arm64; do tar -C "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/$dist" -zcvf "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version-$dist.tgz" log4j-sniffer; done
      # windows-amd requires .exe so cannot be included in above loop for tarring
      - run: version="$(./godelw project-version)" && tar -C "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version/windows-amd64" -zcvf "./out/dist/log4j-sniffer/$version/os-arch-bin/log4j-sniffer-$version-windows-amd64.tgz" log4j-sniffer.exe
      - save_cache:
          key: dist-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}-v1
          paths:
            - out

workflows:
  version: 2
  verify-test-dist-publish:
    jobs:
      - godel/verify:
          name: verify
          executor: circleci-go
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
      - godel/test:
          name: test
          executor: circleci-go
          <<: *homepath
          <<: *gopath
          <<: *all-tags-filter
      - dist:
          name: dist
          <<: *all-tags-filter
